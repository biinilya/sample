swagger: "2.0"
info:
  title: Toptal demo app (Run Keeper)
  description: This RunKeeper API allows you to manage users run data
  version: 1.0.0
  contact:
    email: me@ilyabiin.com
basePath: /api/v1
paths:
  /user/:
    get:
      tags:
      - user
      description: Users Directory
      operationId: UserController.Get All
      parameters:
      - in: header
        name: X-Access-Token
        description: Access Token
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.UserInfoView'
        "401":
          description: unauthorized
        "403":
          description: forbidden
    post:
      tags:
      - user
      description: create new User, returns key and secret used to authorize
      operationId: UserController.Post
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/models.UserCredentialsView'
  /user/{uid}:
    get:
      tags:
      - user
      description: get User
      operationId: UserController.Get One
      parameters:
      - in: header
        name: X-Access-Token
        description: Access Token
        required: true
        type: string
      - in: path
        name: uid
        description: User ID
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.UserInfoView'
        "401":
          description: unauthorized
        "403":
          description: forbidden
    delete:
      tags:
      - user
      description: delete the User
      operationId: UserController.Delete
      parameters:
      - in: header
        name: X-Access-Token
        description: Access Token
        required: true
        type: string
      - in: path
        name: uid
        description: User ID
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.UserInfoView'
        "400":
          description: bad request (uid is missing or is not a number)
        "401":
          description: unauthorized
        "403":
          description: forbidden
  /user/{uid}/credentials:
    put:
      tags:
      - user
      description: generate new User credentials
      operationId: UserController.Put
      parameters:
      - in: header
        name: X-Access-Token
        description: Access Token
        required: true
        type: string
      - in: path
        name: uid
        description: User ID
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.UserCredentialsView'
        "400":
          description: bad request (uid is missing or is not a number)
        "401":
          description: unauthorized
        "403":
          description: forbidden
  /user/sign_in:
    post:
      tags:
      - user
      description: Use this method to receive Access Token which is required for API
        access
      operationId: UserController.SignIn
      parameters:
      - in: body
        name: body
        description: Credentials to Sign In
        required: true
        schema:
          $ref: '#/definitions/models.UserCredentialsView'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.UserAccessTokenView'
        "400":
          description: bad request
        "401":
          description: wrong credentials
definitions:
  models.UserAccessTokenView:
    title: UserAccessTokenView
    type: object
    properties:
      access-token:
        type: string
  models.UserCredentialsView:
    title: UserCredentialsView
    type: object
    properties:
      id:
        type: integer
        format: int64
      key:
        type: string
      secret:
        type: string
  models.UserInfoView:
    title: UserInfoView
    type: object
    properties:
      created:
        type: string
        format: string
      id:
        type: integer
        format: int64
      key:
        type: string
      updated:
        type: string
        format: string
tags:
- name: user
  description: |2
     UserController operations for User
